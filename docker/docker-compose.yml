version: '3.9'

services:
  mariadb:
    restart: always
    image: ${MARIADB_IMAGE}:${MARIADB_VERSION}
    container_name: ${PROJECT_NAME}-mariadb
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE} 
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT_EXTERNAL}:${MYSQL_PORT}
    volumes:
      - mariadb-data:/var/lib/mysql:Z
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "--host=localhost", "--password=$$MYSQL_PASSWORD"]
      interval: 1m30s
      timeout: 30s
      retries: 6
      start_period: 40s

  mongodb:
    restart: always
    image: ${MONGODB_IMAGE}:${MONGODB_VERSION}
    container_name: ${PROJECT_NAME}-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - ${MONGO_PORT_EXTERNAL}:${MONGO_PORT}
    volumes:
      - mongodb-data:/data/db:Z
      - ./conf/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:${MONGO_PORT}/test --quiet
  
  web:
    restart: always
    container_name: ${PROJECT_NAME}-web
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    expose:
      - 80
      - 443
    env_file:
      - ./conf/env
    ports:
      - ${ANNOTATION_TOOL_HTTP_PORT}:80
      - ${ANNOTATION_TOOL_HTTPS_PORT}:443
    depends_on:
      mariadb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
volumes:
  mariadb-data:
  mongodb-data:
